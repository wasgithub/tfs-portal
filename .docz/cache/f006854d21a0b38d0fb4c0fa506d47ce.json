{"remainingRequest":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/source-map-loader/index.js!/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/developers/git.md","dependencies":[{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/developers/git.md","mtime":1567106755842},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1602680894899},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1602680894560},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/@mdx-js/loader/index.js","mtime":1602680893697},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/source-map-loader/index.js","mtime":1602680895615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/developers/git.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AAGF,MAAMC,aAAa,GAAGC,IAAI,IAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,SAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAHD;;AAKA,MAAMG,WAAW,GAAG,EAApB;AAGA,MAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,EAIL;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJK,yBAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAAoE;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApE,QAA6G;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA7G,SAA6J;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7J,+EACiD;AAAG,IAAA,UAAU,EAAC;AAAd,KAAsB;AACnE,YAAQ;AAD2D,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADjD,MANK,EAUL;AAAG,IAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVK,eAYL;AAAG,IAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZK,8CAcL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA+B;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/B,qCAAoG;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAApG,yCACgB;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,qBAdK,EAgBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,CAhBK,EAkBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAA6E;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7E,2CAlBK,EAmBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAL,CAnBK,EAqBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAc;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAd,qFAAsJ;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtJ,sFArBK,EAuBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAvBK,EAwBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAL,CAxBK,EA0BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CA1BK,EA2BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAL,CA3BK,EA6BL;AAAG,IAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BK,+CA+BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuB;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAvB,oDA/BK,EAgCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAA2G;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3G,kCAA8K;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9K,mCAA2O;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3O,gDAA2T;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3T,wBAAmX;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnX,kCAAqb;AAAG,IAAA,UAAU,EAAC;AAAd,KAAsB;AACvc,YAAQ;AAD+b,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArb,MADF,CAhCK,EAqCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAiD;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjD,MArCK,EAsCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GAAL,CAtCK,EA4CL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EA5CK,EA6CL;AAAG,IAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CK,cA+CL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGA/CK,EAgDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAAsE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtE,OADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGAHF,EAIE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA8C;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9C,OAJF,EAKE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEALF,EAME;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGANF,EAOE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAPF,CAhDK,EAyDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGADF,CAzDK,EA4DL;AAAG,IAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5DK,gBA8DL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGAA8F;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9F,8IA9DK,EA+DL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEA/DK,EAiEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAjEK,EAmEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIADF,CAnEK,EAsEL;AAAG,IAAA,EAAE,EAAC,mBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtEK,+BAwEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAAgF;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhF,MADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAHF,EAIE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAJF,EAKE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHALF,CAxEK,EA+EL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/EK,EAgFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhFK,EAiFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAL,CAjFK,EAmFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAL,CAnFK,EAqFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArFK,EAsFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAL,CAtFK,EAwFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GAAL,CAxFK,EA0FL;AAAG,IAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1FK,eA4FL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IAHF,CA5FK,EAiGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EADF,CAjGK,EAoGL;AAAG,IAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApGK,mBAsGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAA2C;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3C,2DAtGK,EAuGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAvGK,EAwGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAL,CAxGK,EA0GL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDA1GK,EA2GL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAL,CA3GK,EA6GL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CA7GK,EA8GL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAL,CA9GK,EAgHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFADF,CAhHK,EAmHL;AAAG,IAAA,EAAE,EAAC,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnHK,4BAqHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2B;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA3B,iFAA2I;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3I,MADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kMAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIAHF,EAIE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAJF,EAKE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0C;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA1C,yIAA0N;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1N,oDAAiT;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjT,8CAAsY;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtY,MALF,CArHK,EA4HL;AAAG,IAAA,EAAE,EAAC,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5HK,6DA8HL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAX,MA9HK,EA+HL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qUAAL,CA/HK,EAyIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAX,MAzIK,EA0IL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wZAAL,CA1IK,EA2JL;AAAG,IAAA,EAAE,EAAC,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3JK,qDA6JL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwB;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB,uEA7JK,EA8JL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0B;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1B,8CADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA6C;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7C,6DAAqI;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArI,+DAA+N;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AAClP,YAAQ;AAD0O,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE9M;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAF8M,CAA/N,MAFF,CA9JK,EAoKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAAoE;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApE,MApKK,EAqKL;AAAG,IAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArKK,oBAuKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uHAA4G;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA5G,iBAvKK,EAyKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,CAzKK,EA2KL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,CA3KK,EA6KL;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7KK,4BA+KL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GA/KK,EAiLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,CAjLK,EAmLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,CAnLK,EAqLL;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArLK,sBAuLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5B,6FAAiK;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAjK,gBAvLK,EAyLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAAL,CAzLK,EA8LL;AAAG,IAAA,EAAE,EAAC,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9LK,qCAgML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAhMK,EAiML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjMK,EAkML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mNAAL,CAlMK,EAoML;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApMK,oCAsML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2JAtMK,EAuML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvMK,EAwML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6LAAL,CAxMK,EA2ML;AAAG,IAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3MK,yBA6ML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FA7MK,EA8ML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9MK,EA+ML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAAL,CA/MK,EAiNL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAAqH;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArH,6DADF,CAjNK,EAoNL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoB;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB,wDACM;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,+BACkE;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlE,qIAEuD;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFvD,iBApNK,CAAP;AAwND;;;;;;;;;;;;;AAED;AACAD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BAxOMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"git\"\n    }}>{`Git`}</h1>\n    <a id=\"introduction\"></a>\n## Introdução\n    <p>{`Este guia tem por objetivo definir as regras para criação de `}<em parentName=\"p\">{`Branchs`}</em>{`, `}<em parentName=\"p\">{`Pull Requests`}</em>{` e `}<em parentName=\"p\">{`Commits`}</em>{` no projetos TFS.\nPara seguir o guia é fundamental o conhecimento da `}<a parentName=\"p\" {...{\n        \"href\": \"https://git-scm.com/book/en/v2\"\n      }}>{`ferramenta Git`}</a>{`.`}</p>\n    <a id=\"flow\"></a>\n## Fluxos\n    <a id=\"branchs\"></a>\n## Regras para criação da *Branch*\n    <p>{`Antes de criar uma nova `}<em parentName=\"p\">{`branch`}</em>{` deve-se assegurar de estar na `}<em parentName=\"p\">{`branch master`}</em>{` do projeto.\nCaso já esteja na `}<em parentName=\"p\">{`master`}</em>{` rode o comando:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git pull\n`}</code></pre>\n    <p>{`Se não retornar nenhum erro ela estará atualizada e é hora de criar a `}<em parentName=\"p\">{`branch`}</em>{` no projeto. Para isso rode o comando:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git checkout -b <COMPONENTE>/<ISSUE>\n`}</code></pre>\n    <p>{`Onde o `}<inlineCode parentName=\"p\">{`<COMPONENTE>`}</inlineCode>{` deve conter o nome do componente e não o projeto onde ele se encontra. E a `}<inlineCode parentName=\"p\">{`<ISSUE>`}</inlineCode>{` é o número da ocorrência a qual se refere a alteração.\nExemplos:`}</p>\n    <p>{`Caso a ISSUE seja gerada no Jira:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git checkout -b tfs-button/TFS-222\n`}</code></pre>\n    <p>{`Caso a ISSUE seja gerada no GitHub:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git checkout -b tfs-button/235\n`}</code></pre>\n    <a id=\"commits\"></a>\n## Regras para criação de *Commits*\n    <p>{`A descrição dos `}<em parentName=\"p\">{`commits`}</em>{` podem ser feitos em português ou inglês.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Caso durante o desenvolvimento da melhoria ou correção forem gerados vários `}<em parentName=\"p\">{`commits`}</em>{` deve-se utilizar o comando `}<em parentName=\"p\">{`rebase`}</em>{` do git com a opção de `}<em parentName=\"p\">{`squash`}</em>{` para que o mesmo transforme em apenas um `}<em parentName=\"p\">{`commit`}</em>{` antes de gerar a `}<em parentName=\"p\">{`Pull Request`}</em>{`. Segue documentação: `}<a parentName=\"p\" {...{\n          \"href\": \"https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History\"\n        }}>{`Git rebase`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`Deve-se seguir um padrão para criação dos `}<em parentName=\"p\">{`commits`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<TIPO>(ESCOPO): <DESCRIÇÃO CURTA>\n<LINHA EM BRANCO>\n<CORPO>\n<LINHA EM BRANCO>\n<RODAPÉ>\n`}</code></pre>\n    <p>{`Agora vamos detalhar melhor o que deve ser descrito em cada parte:`}</p>\n    <a id=\"type\"></a>\n### Tipo\n    <p>{`Deve ser utilizado um dos tipos descritos abaixo conforme o objetivo da alteração:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`build (quando a alteração está relacionada ao `}<em parentName=\"li\">{`build`}</em>{`);`}</li>\n      <li parentName=\"ul\">{`docs (quando a alteração for na documentação);`}</li>\n      <li parentName=\"ul\">{`feat (quando for uma melhoria, for criada uma nova funcionalidade ou um novo componente);`}</li>\n      <li parentName=\"ul\">{`fix (para correção de `}<em parentName=\"li\">{`bugs`}</em>{`);`}</li>\n      <li parentName=\"ul\">{`perf (quando o item é gerado para melhoria de performance);`}</li>\n      <li parentName=\"ul\">{`refactor (quando for feito uma refatoração ou aplicação de boas práticas);`}</li>\n      <li parentName=\"ul\">{`test (quando forem adicionados ou refatorados os testes);`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Nunca colocar espaço entre a descrição do tipo e a abertura de parênteses do escopo.`}</p>\n    </blockquote>\n    <a id=\"scope\"></a>\n### Escopo\n    <p>{`No escopo deverá ser definido o nome do componente ou serviço diretamente afetado pelo `}<em parentName=\"p\">{`commit`}</em>{`, caso mais de um componente seja afetado, deve-se definir o principal. Não deve ser utilizado o prefixo na nomenclatura, por exemplo:`}</p>\n    <p>{`Corretos:\n(button): , (event-sourcing): , (avatar): , ...`}</p>\n    <p>{`Errados:\n(tfs-button): , (tfs-event-sourcing): , (tfs-avatar): , ...`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Sempre deve estar entre parênteses e após o fechamento do parênteses deve-se colocar dois pontos e um espaço.`}</p>\n    </blockquote>\n    <a id=\"short-description\"></a>\n### Descrição curta\n    <ul>\n      <li parentName=\"ul\">{`Deve-se colocar uma breve descrição do que foi feito no `}<em parentName=\"li\">{`commit`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`Nunca iniciar a descrição com letra maiúscula.`}</li>\n      <li parentName=\"ul\">{`Nunca deve utilizar ponto final na descrição.`}</li>\n      <li parentName=\"ul\">{`Deve-se utilizar o modo imperativo na descrição.`}</li>\n      <li parentName=\"ul\">{`Não deve-se ultrapassar 72 caracteres na soma dos caracteres do tipo, escopo e descrição curta.`}</li>\n    </ul>\n    <p>{`por exemplo:`}</p>\n    <p>{`Corretas:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`adiciona nova funcionalidade\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`remove variável não mais utilizada\n`}</code></pre>\n    <p>{`Erradas:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Adicionada nova funcionalidade.\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`Removida variável não mais utilizada no componente tfs-button devido a quebra no uso do mesmo.\n`}</code></pre>\n    <a id=\"body\"></a>\n### Corpo\n    <ul>\n      <li parentName=\"ul\">{`Deve-se utilizar o modo imperativo na descrição.`}</li>\n      <li parentName=\"ul\">{`Deve-se quebrar linha a cada 72 caracteres para que a mesma não seja cortada no GitHub.`}</li>\n      <li parentName=\"ul\">{`Deve descrever a motivação que levou a mudança e também o que foi alterado em relação ao comportamento anterior.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Antes da declaração do corpo deve-se deixar uma linha em branco.`}</p>\n    </blockquote>\n    <a id=\"footer\"></a>\n### Rodapé\n    <p>{`No rodapé deve-se colocar a palavra `}<inlineCode parentName=\"p\">{`Fixes`}</inlineCode>{` e em seguida o número da ISSUE atendida. Exemplos:`}</p>\n    <p>{`Caso a ISSUE seja gerada no Jira:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Fixes DTFSUI-222\n`}</code></pre>\n    <p>{`Caso a ISSUE seja gerada no GitHub e no Jira:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Fixes #235, DTFSUI-222\n`}</code></pre>\n    <p>{`Caso a ISSUE seja gerada no GitHub:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Fixes #235, #456, #665\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Antes da declaração do rodapé deve-se deixar uma linha em branco.`}</p>\n    </blockquote>\n    <a id=\"breaking-changes\"></a>\n### *Breaking Changes*\n    <ul>\n      <li parentName=\"ul\">{`As `}<em parentName=\"li\">{`breaking changes`}</em>{` devem ser declaradas no rodapé uma linha após a declaração do `}<em parentName=\"li\">{`Fixes`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`Deve iniciar utilizando \"BREAKING CHANGES: \" e após o espaço colocar uma breve descrição da quebra iniciando sempre com caractere minúsculo e não colocar ponto final.`}</li>\n      <li parentName=\"ul\">{`Deve-se pular uma linha após a breve descrição e iniciar a descrição do que deve ser migrado ou alterado.`}</li>\n      <li parentName=\"ul\">{`Deve-se quebrar linha a cada 72 caracteres para que a mesma não seja cortada no GitHub.`}</li>\n      <li parentName=\"ul\">{`O tipo do item de `}<em parentName=\"li\">{`breaking change`}</em>{` depende do que está sendo implementado, por exemplo, caso for apenas removida alguma propriedade o tipo deve ser definido como `}<em parentName=\"li\">{`refactor`}</em>{`, caso ao corrigir um problema seja gerado um `}<em parentName=\"li\">{`breaking change`}</em>{` então o tipo deve ser definido como `}<em parentName=\"li\">{`fix`}</em>{`.`}</li>\n    </ul>\n    <a id=\"commit-example\"></a>\n### Exemplos de descrições de *commits* completos\n    <p>{`Sem `}<em parentName=\"p\">{`Breaking Changes`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`feat(button): adiciona a propriedade p-size\n\nO componente tfs-button apenas aceita o uso das classes de grid \npara definir sua largura, não permitindo assim fazer um ajuste \nfino.\nAdiciona a propriedade size para que o componente possa receber um valor\nem pixels fixo para sua largura.\n\nFixes DTHFUI-221\n`}</code></pre>\n    <p>{`Com `}<em parentName=\"p\">{`Breaking Changes`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`refactor(button): remove a propriedade p-size\n\nFoi removida a propriedade p-size do componente.\n\nFixes DTHFUI-225\n\nBREAKING CHANGES: removida propriedade p-size\n\nFoi removida a propriedade p-size do tfs-button pois o mesmo deve ser\ndefinido através do uso das classes de grid.\n\nAntes: \n<tfs-button p-size=\"md\"></tfs-button>\n\nDepois:\n<tfs-button class=\"tfs-md-4\"></tfs-button>\n`}</code></pre>\n    <a id=\"pull-requests\"></a>\n## Regras para criação de *Pull Requests*\n    <p>{`Antes de criar a `}<em parentName=\"p\">{`Pull Request`}</em>{` é importante verificar se algumas perguntas foram respondidas:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<em parentName=\"li\">{`Pull Request`}</em>{` resolveu o problema solicitado na ISSUE?`}</li>\n      <li parentName=\"ul\">{`Foi gerado apenas um `}<em parentName=\"li\">{`commit`}</em>{` para solução do problema? Caso tenha mais de um `}<em parentName=\"li\">{`commit`}</em>{` ou o padrão não esteja de acordo deve seguir este `}<a parentName=\"li\" {...{\n          \"href\": \"#commits\"\n        }}>{`Guia de `}<em parentName=\"a\">{`commits`}</em></a>{`.`}</li>\n    </ul>\n    <p>{`Após essas verificações e tudo estando correto basta gerar a `}<em parentName=\"p\">{`Pull Request`}</em>{`.`}</p>\n    <a id=\"componente\"></a>\n### Componente\n    <p>{`Esse texto deve ser substituído pelo nome do componente diretamente afetado pela alteração gerada na `}<em parentName=\"p\">{`Pull Request`}</em>{`.\nExemplos:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`tfs-modal\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`tfs-button\n`}</code></pre>\n    <a id=\"issue-number\"></a>\n### Número da ISSUE\n    <p>{`Esse texto deve ser substituído pelo número da ISSUE gerada no Jira ou no GitHub.\nExemplos:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`DTHFUI-577\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`#334\n`}</code></pre>\n    <a id=\"pr-checklist\"></a>\n### PR Checklist\n    <p>{`Deve-se adicionar um `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` dentro dos colchetes sem deixar espaço em cada um dos itens que forem alterados na `}<em parentName=\"p\">{`Pull Request`}</em>{`.\nExemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`- [x] Código\n- [x] Testes unitários\n- [ ] Documentação\n- [x] Samples\n`}</code></pre>\n    <a id=\"current-behavior\"></a>\n### Qual o comportamento atual?\n    <p>{`Deve-se descrever o atual comportamento e o motivo que levou a gerar a alteração.`}</p>\n    <p>{`Exemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`O tfs-modal não está permitindo definir uma largura maior que 768px. Está gerando problema pois ao criar um formulário maior gera-se um scroll dificultando a visualização do cliente.\n`}</code></pre>\n    <a id=\"new-behavior\"></a>\n### Qual o novo comportamento?\n    <p>{`Deve-se descrever o novo comportamento gerado, bem como o que e como foi alterado para solucionar o motivo que foi descrito no comportamento atual.`}</p>\n    <p>{`Exemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Criação do novo valor \"full\" na propriedade p-size.\nEste valor serve para poder deixar o tfs-modal ter o tamanho conforme o conteúdo sem a limitação de tamanho.\n`}</code></pre>\n    <a id=\"simulation\"></a>\n### Simulação\n    <p>{`Aqui deve-se descrever sugestões de formas de validar a alteração gerada.`}</p>\n    <p>{`Exemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Esta correção pode ser validada utilizando o sample labs no portal\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Além desses requisitos podem ser adicionados tópicos para facilitar o entendimento da `}<em parentName=\"p\">{`Pull Request`}</em>{`. Exemplo: Observações, definições, links...`}</p>\n    </blockquote>\n    <p>{`Após gerar a `}<em parentName=\"p\">{`Pull Request`}</em>{` é só aguardar aprovação.\nFaça um `}<em parentName=\"p\">{`rebase`}</em>{` e em seguida faça um `}<em parentName=\"p\">{`push`}</em>{` com as alterações e aguarde a aprovação.\nCaso seja aprovado, parabéns, sua alteração já estará na `}<em parentName=\"p\">{`branch master`}</em>{` do projeto.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}