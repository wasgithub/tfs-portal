{"remainingRequest":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/source-map-loader/index.js!/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/documentation/projects.mdx","dependencies":[{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/documentation/projects.mdx","mtime":1564351783980},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1564274188123},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1564159894156},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/@mdx-js/loader/index.js","mtime":1564274188314},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/source-map-loader/index.js","mtime":1549647630591}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/documentation/projects.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"projeto-internet-banking\"\n    }}>{`Projeto INTERNET BANKING`}</h1>\n    <ul>\n      <li parentName=\"ul\"><h2 parentName=\"li\" {...{\n          \"id\": \"se-estiver-criando-uma-nova-release-do-produto-se-atente-a-seção-configurando-para-novos-releases\"\n        }}>{`Se estiver criando uma nova release do produto se atente a seção `}<em parentName=\"h2\"><a parentName=\"em\" {...{\n              \"href\": \"#Configurando-para-novos-releases\"\n            }}>{`Configurando para novos releases`}</a></em></h2></li>\n      <li parentName=\"ul\"><h2 parentName=\"li\" {...{\n          \"id\": \"se-estiver-clonando-o-projeto-para-trabalhar-sobre-uma-release-já-existente-se-atente-a-seção-desenvolvimento\"\n        }}>{`Se estiver clonando o projeto para trabalhar sobre uma release já existente se atente a seção `}<em parentName=\"h2\"><a parentName=\"em\" {...{\n              \"href\": \"#Desenvolvimento\"\n            }}>{`Desenvolvimento`}</a></em></h2></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"palavras-chave\"\n    }}>{`Palavras-chave`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.android.com/studio/build/build-variants\"\n        }}>{`Flavors`}</a>{`: São tipos de compilação e são utilizados para organizar os diferentes releases. Podem ser configurados no menu (Build > Edit Flavors) no Android Studio`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.apple.com/library/archive/featuredarticles/XcodeConcepts/Concept-Targets.html\"\n        }}>{`Targets/Schemes`}</a>{`: Definem um produto a ser gerado e contem as instruções necessárias para a geração do produto`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`Packager`}</a>{` O packager é o processo reponsável por juntar os módulos javascript/typescript em um unico arquivo denominado `}<em parentName=\"li\">{`bundle`}</em>{`, detectar alterações nesses arquivos e atualizar esse `}<em parentName=\"li\">{`bundle`}</em>{`. Esse `}<em parentName=\"li\">{`bundle`}</em>{` é integrado ao executável da aplicação (.apk/.ipa)`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"-conceito-importante-\"\n    }}><strong parentName=\"h1\"><em parentName=\"strong\">{`!!! CONCEITO IMPORTANTE !!!`}</em></strong></h1>\n    <ul>\n      <li parentName=\"ul\">{`Quando a aplicação é executada utilizando o comando `}<inlineCode parentName=\"li\">{`react-native run-ios --scheme=\"Nome do scheme\"`}</inlineCode>{` ou `}<inlineCode parentName=\"li\">{`react-native run-android --variant=\"Nome do flavor\"`}</inlineCode>{` o `}<strong parentName=\"li\">{`packager`}</strong>{` depende da variável `}<em parentName=\"li\">{`REACT_APP_COSTUMER`}</em>{` estar presente no sistema. Veja abaixo na seção `}<strong parentName=\"li\"><em parentName=\"strong\">{`Configuração do ambiente`}</em></strong>{` no 2º item, como definir e os valores aceitos para esta variável.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"configurando-para-novos-releases\"\n    }}>{`Configurando para novos releases`}</h2>\n    <p>{`Abaixo descrevem-se as etapas necessárias para configurar uma nova release do projeto`}</p>\n    <h3 {...{\n      \"id\": \"react-native\"\n    }}>{`REACT NATIVE`}</h3>\n    <p>{`Dentro de `}<a parentName=\"p\" {...{\n        \"href\": \"src/assets/themes/\"\n      }}>{`src/assets/themes`}</a>{` deve ser criado uma nova pasta com o conteúdo da nova release.\nOs arquivos necessários para a nova release:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`colors.js (Com as cores do projeto)`}</li>\n      <li parentName=\"ul\">{`fonts.js (Com as fontes do projeto (Se forem adicionadas novas fontes, devem ser vinculadas no projeto nativo Android/iOS))`}</li>\n      <li parentName=\"ul\">{`images/ (As imagens utilizadas pelo projeto)`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"ios\"\n    }}>{`iOS`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Deve ser criado um novo `}<strong parentName=\"li\">{`target`}</strong>{` para a nova release. Isso pode ser feito duplicando um target existente nas configurações do projeto. `}</li>\n      <li parentName=\"ul\">{`Dentro da aba `}<em parentName=\"li\">{`Build Phases`}</em>{` na fase `}<em parentName=\"li\">{`Bundle React Native code and images`}</em>{` deve se definida após a linha `}<em parentName=\"li\">{`export NODE_BINARY=node`}</em>{` a linha `}<em parentName=\"li\">{`export REACT_APP_COSTUMER=\"Uma das pastas configuradas no React Native\"`}</em></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`export NODE_BINARY=node\nexport REACT_APP_COSTUMER=\"Uma das pastas configuradas no React Native\"\n../node_modules/react-native/scripts/react-native-xcode.sh\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Deve ser configurado um novo scheme para buildar o target existente. Isso pode ser feito duplicando algum scheme existente.`}</li>\n      <li parentName=\"ul\">{`Os recursos de icone do aplicativo e launchscreen da nova release devem ser configurados da seguinte forma:`}</li>\n      <li parentName=\"ul\">{`Crie um novo pacote de recursos (.xcassets), e associe ao `}<em parentName=\"li\">{`target`}</em>{` da release marcando-o na seção `}<strong parentName=\"li\">{`Target membership`}</strong>{` (caso necessário desmarque de targets que não estão relacionados ao produto)`}</li>\n      <li parentName=\"ul\">{`Dentro do pacote de recursos crie um novo recurso de icone (App Icons & Launch Images > New iOS App Icon) nomeado `}<em parentName=\"li\">{`AppIcon`}</em>{` e forneça a imagens para os ícones da release`}</li>\n      <li parentName=\"ul\">{`Ainda dentro do pacote de recursos crie um novo recurso de imagem (New Image Set) nomeado `}<em parentName=\"li\">{`splash_screen`}</em>{` e forneça os arquivos de imagem da splash_screen`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"android\"\n    }}>{`ANDROID`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Deve ser criado um novo `}<strong parentName=\"li\">{`flavor`}</strong>{` para a nova release. Pode ser definida pelo menu (Build > Edit Flavors) no Android Studio`}</li>\n      <li parentName=\"ul\">{`Dentro das configurações do novo `}<strong parentName=\"li\">{`flavor`}</strong>{` deve ser definida a variável `}<em parentName=\"li\">{`costumer`}</em>{` = \"Uma das pastas configuradas no React Native\" `}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`//Arquivo /android/app/build.gradle\nandroid {\n  ...\n  flavorDimensions 'dimension'\n  productFlavors {\n    flavorName {\n      dimension = 'dimension'\n      //Esta variável será usada pelo React Native para apontar para a pasta com os recursos da nova release\n      costumer = 'Uma das pastas configuradas em /src/assets/themes/'\n    }\n  }\n  ...\n}\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"\"\n    }}></h1>\n    <h2 {...{\n      \"id\": \"desenvolvimento\"\n    }}>{`Desenvolvimento`}</h2>\n    <p>{`Abaixo estão descritos os requisitos necessários para um melhor desenvolvimento na arquitetura descrita na seção anterior`}</p>\n    <h3 {...{\n      \"id\": \"configuração-do-ambiente\"\n    }}>{`Configuração do ambiente`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`No momento da elaboração deste manual a versão das ferramentas utilizadas no desenvolvimento eram:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`npm: 6.4.1`}</li>\n          <li parentName=\"ul\">{`node: 10.15.3`}</li>\n          <li parentName=\"ul\">{`java: 1.8.0_211`}</li>\n          <li parentName=\"ul\">{`XCode: 10.2.1`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`A variável REACT_APP_COSTUMER deve ser definida no ambiente utilizado com o valor igual a algum dos diretórios da pasta `}<a parentName=\"li\" {...{\n          \"href\": \"src/assets/themes\"\n        }}>{`src/assets/themes`}</a>{`. Isso se deve devido as variáveis configuradas no `}<strong parentName=\"li\">{`flavor`}</strong>{`/`}<strong parentName=\"li\">{`target`}</strong>{` não serem definidas na sessão do `}<strong parentName=\"li\">{`packager`}</strong>{` iniciado pelo comando `}<em parentName=\"li\">{`react-native run-android`}</em>{`/`}<em parentName=\"li\">{`react-native run-ios`}</em></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"executando-a-aplicação\"\n    }}>{`Executando a aplicação`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Para iniciar o aplicativo deve ser utilizado o seguinte comando:`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"android-1\"\n    }}>{`Android`}</h4>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`A variável REACT_APP_COSTUMER deve estar definida para que o packager do React Native possa apontar para os recursos da release`}</strong></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`# Esse comando é opcional e só é necessário quando a variável REACT_APP_COSTUMER foi definida dentro da sessão do terminal\nreact-native start \nreact-native run-android --variant=\"O nome do flavor da release\"Debug\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"ios-1\"\n    }}>{`iOS`}</h4>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`A variável REACT_APP_COSTUMER deve estar definida para que o packager do React Native possa apontar para os recursos específicos da release`}</strong></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`# Esse comando é opcional e só é necessário quando a variável REACT_APP_COSTUMER foi definida dentro da sessão do terminal\nreact-native start \nreact-native run-ios --scheme=\"O nome do scheme da release\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"gerando-a-release\"\n    }}>{`Gerando a release`}</h3>\n    <p>{`Para gerar uma versão de publicação da release, deve ser executado o seguinte processo para cada uma das plataformas:`}</p>\n    <h4 {...{\n      \"id\": \"android-2\"\n    }}>{`Android`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`cd android\n.\\\\gradlew clean\n.\\\\gradlew assemble(O nome do flavor)Release\n`}</code></pre>\n    <p>{`Após concluído o processo a APK para publicação estará disponível na pasta `}<a parentName=\"p\" {...{\n        \"href\": \"android/app/build/outputs/release/\"\n      }}>{`android/app/build/outputs/release/O nome do flavor/arquivo.apk`}</a></p>\n    <h4 {...{\n      \"id\": \"ios-2\"\n    }}>{`iOS`}</h4>\n    <p>{`Selecione o scheme da release especifica, selecione o dispositivo `}<em parentName=\"p\">{`Generic iOS Device`}</em>{` e selecione a opção (Product > Archive). Vale lembrar que para executar o archive deve ser utilizado um perfil de desenvolvedor na App Store`}</p>\n    <h1 {...{\n      \"id\": \"erros-comuns\"\n    }}>{`Erros comuns`}</h1>\n    <h2 {...{\n      \"id\": \"android-3\"\n    }}>{`Android`}</h2>\n    <h3 {...{\n      \"id\": \"android-erro-ao-compilar-o-lottie-react-native-nullpointerexception\"\n    }}>{`(Android) Erro ao compilar o lottie-react-native NullPointerException`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`A versão do java utilizada pela equipe de desenvolvimento é a 1.8.0_211 versões mais recentes ou mais antigas não foram testadas e por isso podem não funcionar com a versão atual da aplicação.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"android-algum-erro-ao-gerar-a-release-ou-executar-a-aplicação\"\n    }}>{`(Android) Algum erro ao gerar a release ou executar a aplicação`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`As vezes o Instant Run pode interferir na geração do APK, devido a isso recomenda-se desabilitar o Instant Run no Android Studio`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Quando o projeto é aberto pela primeira vez, o Android Studio oferece a opção de atualizar o Gradle. Essa alteração na versão do gradle ainda não funciona com a versão de algumas bibliotecas usadas no projeto, logo a atualização pode quebrar o build no Android. No momento de elaboração deste manual, a versão utilizada é a `}<em parentName=\"p\">{`4.4-all`}</em>{` no arquivo `}<a parentName=\"p\" {...{\n            \"href\": \"android/gradle/wrapper/gradle-wrapper.properties\"\n          }}>{`gradle-wrapper.properties`}</a></p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ini\"\n      }}>{`...\ndistributionUrl=https\\\\://services.gradle.org/distributions/gradle-4.4-all.zip\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"ios-algum-erro-ao-gerar-a-release-ou-executar-a-aplicação\"\n    }}>{`(iOS) Algum erro ao gerar a release ou executar a aplicação`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Erro ao gerar a release ou executar a aplicação.\n`}<inlineCode parentName=\"li\">{`'React/RCT*.h' file not found`}</inlineCode>{` Certifique-se de que dentro do `}<strong parentName=\"li\">{`scheme`}</strong>{` da release o `}<strong parentName=\"li\">{`target`}</strong>{` do React esta definido e o build paralelo desabilitado, já que a release depende do `}<strong parentName=\"li\">{`target`}</strong>{` do React`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"após-alterar-o-arquivo-babelrcjs-ou-o-valor-de-react_app_costumer-o-aplicativo-obtém-os-arquivos-do-valor-anterior\"\n    }}>{`Após alterar o arquivo .babelrc.js ou o valor de REACT_APP_COSTUMER o aplicativo obtém os arquivos do valor anterior`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`O packager mantém uma versão em cache do arquivo `}<a parentName=\"li\" {...{\n          \"href\": \".babelrc.js\"\n        }}>{`.babelrc.js`}</a>{`. Dessa forma uma alteração do arquivo ou da variável pode não se refletir de maneira imediata. Para que o packager utilize a nova versão do arquivo ou variavel é necessário utilizar o comando.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`react-native start --reset-cache\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"sugestões\"\n    }}>{`Sugestões`}</h1>\n    <h2 {...{\n      \"id\": \"para-gerenciar-as-versões-do-nodejs-e-npm\"\n    }}>{`Para gerenciar as versões do NodeJS e npm`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/nvm-sh/nvm\"\n          }}>{`nvm`}</a>{`: O `}<em parentName=\"p\">{`nvm`}</em>{` é um conjunto de comandos que sao instalados no ambiente e permitem gerenciar de maneira facil diversas versões do `}<em parentName=\"p\">{`NodeJS & npm`}</em></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Para gerenciar a execução de diversas releases do projeto podem ser criados scripts com os comandos dentro do arquivo `}<a parentName=\"p\" {...{\n            \"href\": \"package.json\"\n          }}>{`package.json`}</a>{` e depois executá-lo com `}<inlineCode parentName=\"p\">{`npm run nome_do_script`}</inlineCode></p>\n      </li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}