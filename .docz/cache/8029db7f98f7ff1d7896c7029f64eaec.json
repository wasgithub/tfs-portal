{"remainingRequest":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/source-map-loader/index.js!/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/documentation/document-settings.mdx","dependencies":[{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/documentation/document-settings.mdx","mtime":1564400809830},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1564274188123},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1564159894156},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/@mdx-js/loader/index.js","mtime":1564274188314},{"path":"/Users/washington.silva/totvs/projetos-psl/tfs-portal/node_modules/source-map-loader/index.js","mtime":1549647630591}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVXNlcnMvd2FzaGluZ3Rvbi5zaWx2YS90b3R2cy9wcm9qZXRvcy1wc2wvdGZzLXBvcnRhbC9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9Vc2Vycy93YXNoaW5ndG9uLnNpbHZhL3RvdHZzL3Byb2pldG9zLXBzbC90ZnMtcG9ydGFsL3NyYy9kb2NzL2RvY3VtZW50YXRpb24vZG9jdW1lbnQtc2V0dGluZ3MubWR4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCi8qIEBqc3ggbWR4ICovCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnOwovKiBAanN4IG1keCAqLwoKY29uc3QgbWFrZVNob3J0Y29kZSA9IG5hbWUgPT4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcykgewogIGNvbnNvbGUud2FybigiQ29tcG9uZW50ICIgKyBuYW1lICsgIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7CiAgcmV0dXJuIG1keCgiZGl2IiwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSk7Cn07Cgpjb25zdCBsYXlvdXRQcm9wcyA9IHt9Owpjb25zdCBNRFhMYXlvdXQgPSAid3JhcHBlciI7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZikgewogIGxldCBjb21wb25lbnRzID0gX3JlZi5jb21wb25lbnRzLAogICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImNvbXBvbmVudHMiXSk7CgogIHJldHVybiBtZHgoTURYTGF5b3V0LCBPYmplY3QuYXNzaWduKHt9LCBsYXlvdXRQcm9wcywgcHJvcHMsIHsKICAgIGNvbXBvbmVudHM6IGNvbXBvbmVudHMsCiAgICBtZHhUeXBlOiAiTURYTGF5b3V0IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIG1keCgiaDEiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJkb2N1bWVudGHDp8OjbyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiRG9jdW1lbnRhXHhFN1x4RTNvIiksIG1keCgiYSIsIHsKICAgIGlkOiAiaW50cm9kdWN0aW9uIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIjIyBJbnRyb2R1XHhFN1x4RTNvIiwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRXN0ZSBndWlhIHRlbSBwb3Igb2JqZXRpdm8gZGVmaW5pciBhcyByZWdyYXMgcGFyYSBjcmlhXHhFN1x4RTNvIGRlICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJCcmFuY2hzIiksICIsICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJQdWxsIFJlcXVlc3RzIiksICIgZSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQ29tbWl0cyIpLCAiIG5vIHByb2pldG9zIFRGUy5cblBhcmEgc2VndWlyIG8gZ3VpYSBceEU5IGZ1bmRhbWVudGFsIG8gY29uaGVjaW1lbnRvIGRhICIsIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInAiCiAgfSwgewogICAgImhyZWYiOiAiaHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL2VuL3YyIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJmZXJyYW1lbnRhIEdpdCIpLCAiLiIpLCBtZHgoImEiLCB7CiAgICBpZDogImZsb3ciLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIEZsdXhvcyIsIG1keCgiYSIsIHsKICAgIGlkOiAiYnJhbmNocyIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiIyMgUmVncmFzIHBhcmEgY3JpYVx4RTdceEUzbyBkYSAqQnJhbmNoKiIsIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkFudGVzIGRlIGNyaWFyIHVtYSBub3ZhICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJicmFuY2giKSwgIiBkZXZlLXNlIGFzc2VndXJhciBkZSBlc3RhciBuYSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiYnJhbmNoIG1hc3RlciIpLCAiIGRvIHByb2pldG8uXG5DYXNvIGpceEUxIGVzdGVqYSBuYSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAibWFzdGVyIiksICIgcm9kZSBvIGNvbWFuZG86IiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJnaXQgcHVsbFxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJTZSBuXHhFM28gcmV0b3JuYXIgbmVuaHVtIGVycm8gZWxhIGVzdGFyXHhFMSBhdHVhbGl6YWRhIGUgXHhFOSBob3JhIGRlIGNyaWFyIGEgIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImJyYW5jaCIpLCAiIG5vIHByb2pldG8uIFBhcmEgaXNzbyByb2RlIG8gY29tYW5kbzoiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7fSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgImdpdCBjaGVja291dCAtYiA8Q09NUE9ORU5URT4vPElTU1VFPlxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJPbmRlIG8gIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiPENPTVBPTkVOVEU+IiksICIgZGV2ZSBjb250ZXIgbyBub21lIGRvIGNvbXBvbmVudGUgZSBuXHhFM28gbyBwcm9qZXRvIG9uZGUgZWxlIHNlIGVuY29udHJhLiBFIGEgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiPElTU1VFPiIpLCAiIFx4RTkgbyBuXHhGQW1lcm8gZGEgb2NvcnJceEVBbmNpYSBhIHF1YWwgc2UgcmVmZXJlIGEgYWx0ZXJhXHhFN1x4RTNvLlxuRXhlbXBsb3M6IiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkNhc28gYSBJU1NVRSBzZWphIGdlcmFkYSBubyBKaXJhOiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiZ2l0IGNoZWNrb3V0IC1iIHRmcy1idXR0b24vVEZTLTIyMlxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0NgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDYXNvIGEgSVNTVUUgc2VqYSBnZXJhZGEgbm8gR2l0SHViOiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiZ2l0IGNoZWNrb3V0IC1iIHRmcy1idXR0b24vMjM1XG4iKSksIG1keCgiYSIsIHsKICAgIGlkOiAiY29tbWl0cyIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiIyMgUmVncmFzIHBhcmEgY3JpYVx4RTdceEUzbyBkZSAqQ29tbWl0cyoiLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJBIGRlc2NyaVx4RTdceEUzbyBkb3MgIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImNvbW1pdHMiKSwgIiBwb2RlbSBzZXIgZmVpdG9zIGVtIHBvcnR1Z3VceEVBcyBvdSBpbmdsXHhFQXMuIiksIG1keCgiYmxvY2txdW90ZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJwIiwgewogICAgcGFyZW50TmFtZTogImJsb2NrcXVvdGUiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQ2FzbyBkdXJhbnRlIG8gZGVzZW52b2x2aW1lbnRvIGRhIG1lbGhvcmlhIG91IGNvcnJlXHhFN1x4RTNvIGZvcmVtIGdlcmFkb3Mgdlx4RTFyaW9zICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJjb21taXRzIiksICIgZGV2ZS1zZSB1dGlsaXphciBvIGNvbWFuZG8gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInJlYmFzZSIpLCAiIGRvIGdpdCBjb20gYSBvcFx4RTdceEUzbyBkZSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAic3F1YXNoIiksICIgcGFyYSBxdWUgbyBtZXNtbyB0cmFuc2Zvcm1lIGVtIGFwZW5hcyB1bSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiY29tbWl0IiksICIgYW50ZXMgZGUgZ2VyYXIgYSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUHVsbCBSZXF1ZXN0IiksICIuIFNlZ3VlIGRvY3VtZW50YVx4RTdceEUzbzogIiwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicCIKICB9LCB7CiAgICAiaHJlZiI6ICJodHRwczovL2dpdC1zY20uY29tL2Jvb2svZW4vdjIvR2l0LVRvb2xzLVJld3JpdGluZy1IaXN0b3J5IgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJHaXQgcmViYXNlIiksICIuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJEZXZlLXNlIHNlZ3VpciB1bSBwYWRyXHhFM28gcGFyYSBjcmlhXHhFN1x4RTNvIGRvcyAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiY29tbWl0cyIpLCAiOiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiPFRJUE8+KEVTQ09QTyk6IDxERVNDUklceEM3XHhDM08gQ1VSVEE+XG48TElOSEEgRU0gQlJBTkNPPlxuPENPUlBPPlxuPExJTkhBIEVNIEJSQU5DTz5cbjxST0RBUFx4Qzk+XG4iKSksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDY0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkFnb3JhIHZhbW9zIGRldGFsaGFyIG1lbGhvciBvIHF1ZSBkZXZlIHNlciBkZXNjcml0byBlbSBjYWRhIHBhcnRlOiIpLCBtZHgoImEiLCB7CiAgICBpZDogInR5cGUiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyBUaXBvIiwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRGV2ZSBzZXIgdXRpbGl6YWRvIHVtIGRvcyB0aXBvcyBkZXNjcml0b3MgYWJhaXhvIGNvbmZvcm1lIG8gb2JqZXRpdm8gZGEgYWx0ZXJhXHhFN1x4RTNvOiIpLCBtZHgoInVsIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDY5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImJ1aWxkIChxdWFuZG8gYSBhbHRlcmFceEU3XHhFM28gZXN0XHhFMSByZWxhY2lvbmFkYSBhbyAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogImxpIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDY5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImJ1aWxkIiksICIpOyIpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDcwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImRvY3MgKHF1YW5kbyBhIGFsdGVyYVx4RTdceEUzbyBmb3IgbmEgZG9jdW1lbnRhXHhFN1x4RTNvKTsiKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJmZWF0IChxdWFuZG8gZm9yIHVtYSBtZWxob3JpYSwgZm9yIGNyaWFkYSB1bWEgbm92YSBmdW5jaW9uYWxpZGFkZSBvdSB1bSBub3ZvIGNvbXBvbmVudGUpOyIpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDcyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImZpeCAocGFyYSBjb3JyZVx4RTdceEUzbyBkZSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogImxpIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDcyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImJ1Z3MiKSwgIik7IiksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNzMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAicGVyZiAocXVhbmRvIG8gaXRlbSBceEU5IGdlcmFkbyBwYXJhIG1lbGhvcmlhIGRlIHBlcmZvcm1hbmNlKTsiKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJyZWZhY3RvciAocXVhbmRvIGZvciBmZWl0byB1bWEgcmVmYXRvcmFceEU3XHhFM28gb3UgYXBsaWNhXHhFN1x4RTNvIGRlIGJvYXMgcHJceEUxdGljYXMpOyIpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDc1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInRlc3QgKHF1YW5kbyBmb3JlbSBhZGljaW9uYWRvcyBvdSByZWZhdG9yYWRvcyBvcyB0ZXN0ZXMpOyIpKSwgbWR4KCJibG9ja3F1b3RlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNzcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoInAiLCB7CiAgICBwYXJlbnROYW1lOiAiYmxvY2txdW90ZSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJOdW5jYSBjb2xvY2FyIGVzcGFceEU3byBlbnRyZSBhIGRlc2NyaVx4RTdceEUzbyBkbyB0aXBvIGUgYSBhYmVydHVyYSBkZSBwYXJceEVBbnRlc2VzIGRvIGVzY29wby4iKSksIG1keCgiYSIsIHsKICAgIGlkOiAic2NvcGUiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogODAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyBFc2NvcG8iLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4MgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJObyBlc2NvcG8gZGV2ZXJceEUxIHNlciBkZWZpbmlkbyBvIG5vbWUgZG8gY29tcG9uZW50ZSBvdSBzZXJ2aVx4RTdvIGRpcmV0YW1lbnRlIGFmZXRhZG8gcGVsbyAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogODIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiY29tbWl0IiksICIsIGNhc28gbWFpcyBkZSB1bSBjb21wb25lbnRlIHNlamEgYWZldGFkbywgZGV2ZS1zZSBkZWZpbmlyIG8gcHJpbmNpcGFsLiBOXHhFM28gZGV2ZSBzZXIgdXRpbGl6YWRvIG8gcHJlZml4byBuYSBub21lbmNsYXR1cmEsIHBvciBleGVtcGxvOiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDb3JyZXRvczpcbihidXR0b24pOiAsIChldmVudC1zb3VyY2luZyk6ICwgKGF2YXRhcik6ICwgLi4uIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDg1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkVycmFkb3M6XG4odGZzLWJ1dHRvbik6ICwgKHRmcy1ldmVudC1zb3VyY2luZyk6ICwgKHRmcy1hdmF0YXIpOiAsIC4uLiIpLCBtZHgoImJsb2NrcXVvdGUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgicCIsIHsKICAgIHBhcmVudE5hbWU6ICJibG9ja3F1b3RlIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDg4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlNlbXByZSBkZXZlIGVzdGFyIGVudHJlIHBhclx4RUFudGVzZXMgZSBhcFx4RjNzIG8gZmVjaGFtZW50byBkbyBwYXJceEVBbnRlc2VzIGRldmUtc2UgY29sb2NhciBkb2lzIHBvbnRvcyBlIHVtIGVzcGFceEU3by4iKSksIG1keCgiYSIsIHsKICAgIGlkOiAic2hvcnQtZGVzY3JpcHRpb24iLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyBEZXNjcmlceEU3XHhFM28gY3VydGEiLCBtZHgoInVsIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDkzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkRldmUtc2UgY29sb2NhciB1bWEgYnJldmUgZGVzY3JpXHhFN1x4RTNvIGRvIHF1ZSBmb2kgZmVpdG8gbm8gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA5MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJjb21taXQiKSwgIi4iKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA5NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJOdW5jYSBpbmljaWFyIGEgZGVzY3JpXHhFN1x4RTNvIGNvbSBsZXRyYSBtYWlceEZBc2N1bGEuIiksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiTnVuY2EgZGV2ZSB1dGlsaXphciBwb250byBmaW5hbCBuYSBkZXNjcmlceEU3XHhFM28uIiksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRGV2ZS1zZSB1dGlsaXphciBvIG1vZG8gaW1wZXJhdGl2byBuYSBkZXNjcmlceEU3XHhFM28uIiksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiTlx4RTNvIGRldmUtc2UgdWx0cmFwYXNzYXIgNzIgY2FyYWN0ZXJlcyBuYSBzb21hIGRvcyBjYXJhY3RlcmVzIGRvIHRpcG8sIGVzY29wbyBlIGRlc2NyaVx4RTdceEUzbyBjdXJ0YS4iKSksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDk5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInBvciBleGVtcGxvOiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMDAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQ29ycmV0YXM6IiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTAxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgImFkaWNpb25hIG5vdmEgZnVuY2lvbmFsaWRhZGVcbiIpKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMDMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEwMwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAicmVtb3ZlIHZhcmlceEUxdmVsIG5ceEUzbyBtYWlzIHV0aWxpemFkYVxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMDUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRXJyYWRhczoiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMDYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEwNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiQWRpY2lvbmFkYSBub3ZhIGZ1bmNpb25hbGlkYWRlLlxuIikpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEwOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7fSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTA4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSZW1vdmlkYSB2YXJpXHhFMXZlbCBuXHhFM28gbWFpcyB1dGlsaXphZGEgbm8gY29tcG9uZW50ZSB0ZnMtYnV0dG9uIGRldmlkbyBhIHF1ZWJyYSBubyB1c28gZG8gbWVzbW8uXG4iKSksIG1keCgiYSIsIHsKICAgIGlkOiAiYm9keSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMTAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyBDb3JwbyIsIG1keCgidWwiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMTIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDExMwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJEZXZlLXNlIHV0aWxpemFyIG8gbW9kbyBpbXBlcmF0aXZvIG5hIGRlc2NyaVx4RTdceEUzby4iKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMTQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRGV2ZS1zZSBxdWVicmFyIGxpbmhhIGEgY2FkYSA3MiBjYXJhY3RlcmVzIHBhcmEgcXVlIGEgbWVzbWEgblx4RTNvIHNlamEgY29ydGFkYSBubyBHaXRIdWIuIiksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTE1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkRldmUgZGVzY3JldmVyIGEgbW90aXZhXHhFN1x4RTNvIHF1ZSBsZXZvdSBhIG11ZGFuXHhFN2EgZSB0YW1iXHhFOW0gbyBxdWUgZm9pIGFsdGVyYWRvIGVtIHJlbGFceEU3XHhFM28gYW8gY29tcG9ydGFtZW50byBhbnRlcmlvci4iKSksIG1keCgiYmxvY2txdW90ZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDExNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgicCIsIHsKICAgIHBhcmVudE5hbWU6ICJibG9ja3F1b3RlIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDExOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJBbnRlcyBkYSBkZWNsYXJhXHhFN1x4RTNvIGRvIGNvcnBvIGRldmUtc2UgZGVpeGFyIHVtYSBsaW5oYSBlbSBicmFuY28uIikpLCBtZHgoImEiLCB7CiAgICBpZDogImZvb3RlciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMjAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyBSb2RhcFx4RTkiLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMjIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiTm8gcm9kYXBceEU5IGRldmUtc2UgY29sb2NhciBhIHBhbGF2cmEgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTIyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkZpeGVzIiksICIgZSBlbSBzZWd1aWRhIG8gblx4RkFtZXJvIGRhIElTU1VFIGF0ZW5kaWRhLiBFeGVtcGxvczoiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTIzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkNhc28gYSBJU1NVRSBzZWphIGdlcmFkYSBubyBKaXJhOiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEyNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7fSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTI0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJGaXhlcyBEVEZTVUktMjIyXG4iKSksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEyNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDYXNvIGEgSVNTVUUgc2VqYSBnZXJhZGEgbm8gR2l0SHViIGUgbm8gSmlyYToiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEyNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiRml4ZXMgIzIzNSwgRFRGU1VJLTIyMlxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMjkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQ2FzbyBhIElTU1VFIHNlamEgZ2VyYWRhIG5vIEdpdEh1YjoiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEzMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiRml4ZXMgIzIzNSwgIzQ1NiwgIzY2NVxuIikpLCBtZHgoImJsb2NrcXVvdGUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoInAiLCB7CiAgICBwYXJlbnROYW1lOiAiYmxvY2txdW90ZSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQW50ZXMgZGEgZGVjbGFyYVx4RTdceEUzbyBkbyByb2RhcFx4RTkgZGV2ZS1zZSBkZWl4YXIgdW1hIGxpbmhhIGVtIGJyYW5jby4iKSksIG1keCgiYSIsIHsKICAgIGlkOiAiYnJlYWtpbmctY2hhbmdlcyIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyAqQnJlYWtpbmcgQ2hhbmdlcyoiLCBtZHgoInVsIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTM3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQXMgIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiYnJlYWtpbmcgY2hhbmdlcyIpLCAiIGRldmVtIHNlciBkZWNsYXJhZGFzIG5vIHJvZGFwXHhFOSB1bWEgbGluaGEgYXBceEYzcyBhIGRlY2xhcmFceEU3XHhFM28gZG8gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRml4ZXMiKSwgIi4iKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRGV2ZSBpbmljaWFyIHV0aWxpemFuZG8gXCJCUkVBS0lORyBDSEFOR0VTOiBcIiBlIGFwXHhGM3MgbyBlc3BhXHhFN28gY29sb2NhciB1bWEgYnJldmUgZGVzY3JpXHhFN1x4RTNvIGRhIHF1ZWJyYSBpbmljaWFuZG8gc2VtcHJlIGNvbSBjYXJhY3RlcmUgbWluXHhGQXNjdWxvIGUgblx4RTNvIGNvbG9jYXIgcG9udG8gZmluYWwuIiksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTQwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkRldmUtc2UgcHVsYXIgdW1hIGxpbmhhIGFwXHhGM3MgYSBicmV2ZSBkZXNjcmlceEU3XHhFM28gZSBpbmljaWFyIGEgZGVzY3JpXHhFN1x4RTNvIGRvIHF1ZSBkZXZlIHNlciBtaWdyYWRvIG91IGFsdGVyYWRvLiIpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE0MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJEZXZlLXNlIHF1ZWJyYXIgbGluaGEgYSBjYWRhIDcyIGNhcmFjdGVyZXMgcGFyYSBxdWUgYSBtZXNtYSBuXHhFM28gc2VqYSBjb3J0YWRhIG5vIEdpdEh1Yi4iKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNDIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiTyB0aXBvIGRvIGl0ZW0gZGUgIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNDIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiYnJlYWtpbmcgY2hhbmdlIiksICIgZGVwZW5kZSBkbyBxdWUgZXN0XHhFMSBzZW5kbyBpbXBsZW1lbnRhZG8sIHBvciBleGVtcGxvLCBjYXNvIGZvciBhcGVuYXMgcmVtb3ZpZGEgYWxndW1hIHByb3ByaWVkYWRlIG8gdGlwbyBkZXZlIHNlciBkZWZpbmlkbyBjb21vICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAibGkiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTQyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInJlZmFjdG9yIiksICIsIGNhc28gYW8gY29ycmlnaXIgdW0gcHJvYmxlbWEgc2VqYSBnZXJhZG8gdW0gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNDIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiYnJlYWtpbmcgY2hhbmdlIiksICIgZW50XHhFM28gbyB0aXBvIGRldmUgc2VyIGRlZmluaWRvIGNvbW8gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNDIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiZml4IiksICIuIikpLCBtZHgoImEiLCB7CiAgICBpZDogImNvbW1pdC1leGFtcGxlIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE0NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiIyMjIEV4ZW1wbG9zIGRlIGRlc2NyaVx4RTdceEY1ZXMgZGUgKmNvbW1pdHMqIGNvbXBsZXRvcyIsIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE0NgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJTZW0gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE0NgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJCcmVha2luZyBDaGFuZ2VzIiksICI6IiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTQ3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNDcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgImZlYXQoYnV0dG9uKTogYWRpY2lvbmEgYSBwcm9wcmllZGFkZSBwLXNpemVcblxuTyBjb21wb25lbnRlIHRmcy1idXR0b24gYXBlbmFzIGFjZWl0YSBvIHVzbyBkYXMgY2xhc3NlcyBkZSBncmlkIFxucGFyYSBkZWZpbmlyIHN1YSBsYXJndXJhLCBuXHhFM28gcGVybWl0aW5kbyBhc3NpbSBmYXplciB1bSBhanVzdGUgXG5maW5vLlxuQWRpY2lvbmEgYSBwcm9wcmllZGFkZSBzaXplIHBhcmEgcXVlIG8gY29tcG9uZW50ZSBwb3NzYSByZWNlYmVyIHVtIHZhbG9yXG5lbSBwaXhlbHMgZml4byBwYXJhIHN1YSBsYXJndXJhLlxuXG5GaXhlcyBEVEhGVUktMjIxXG4iKSksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE1NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDb20gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE1NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJCcmVha2luZyBDaGFuZ2VzIiksICI6IiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTU4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNTgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgInJlZmFjdG9yKGJ1dHRvbik6IHJlbW92ZSBhIHByb3ByaWVkYWRlIHAtc2l6ZVxuXG5Gb2kgcmVtb3ZpZGEgYSBwcm9wcmllZGFkZSBwLXNpemUgZG8gY29tcG9uZW50ZS5cblxuRml4ZXMgRFRIRlVJLTIyNVxuXG5CUkVBS0lORyBDSEFOR0VTOiByZW1vdmlkYSBwcm9wcmllZGFkZSBwLXNpemVcblxuRm9pIHJlbW92aWRhIGEgcHJvcHJpZWRhZGUgcC1zaXplIGRvIHRmcy1idXR0b24gcG9pcyBvIG1lc21vIGRldmUgc2VyXG5kZWZpbmlkbyBhdHJhdlx4RTlzIGRvIHVzbyBkYXMgY2xhc3NlcyBkZSBncmlkLlxuXG5BbnRlczogXG48dGZzLWJ1dHRvbiBwLXNpemU9XCJtZFwiPjwvdGZzLWJ1dHRvbj5cblxuRGVwb2lzOlxuPHRmcy1idXR0b24gY2xhc3M9XCJ0ZnMtbWQtNFwiPjwvdGZzLWJ1dHRvbj5cbiIpKSwgbWR4KCJhIiwgewogICAgaWQ6ICJwdWxsLXJlcXVlc3RzIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE3NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiIyMgUmVncmFzIHBhcmEgY3JpYVx4RTdceEUzbyBkZSAqUHVsbCBSZXF1ZXN0cyoiLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNzcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQW50ZXMgZGUgY3JpYXIgYSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTc3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlB1bGwgUmVxdWVzdCIpLCAiIFx4RTkgaW1wb3J0YW50ZSB2ZXJpZmljYXIgc2UgYWxndW1hcyBwZXJndW50YXMgZm9yYW0gcmVzcG9uZGlkYXM6IiksIG1keCgidWwiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNzgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE3OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJBICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAibGkiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTc5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlB1bGwgUmVxdWVzdCIpLCAiIHJlc29sdmV1IG8gcHJvYmxlbWEgc29saWNpdGFkbyBuYSBJU1NVRT8iKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxODAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRm9pIGdlcmFkbyBhcGVuYXMgdW0gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxODAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiY29tbWl0IiksICIgcGFyYSBzb2x1XHhFN1x4RTNvIGRvIHByb2JsZW1hPyBDYXNvIHRlbmhhIG1haXMgZGUgdW0gIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxODAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiY29tbWl0IiksICIgb3UgbyBwYWRyXHhFM28gblx4RTNvIGVzdGVqYSBkZSBhY29yZG8gZGV2ZSBzZWd1aXIgZXN0ZSAiLCBtZHgoImEiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJsaSIKICB9LCB7CiAgICAiaHJlZiI6ICIjY29tbWl0cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxODAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIkd1aWEgZGUgIiwgbWR4KCJlbSIsIHsKICAgIHBhcmVudE5hbWU6ICJhIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE4MgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJjb21taXRzIikpLCAiLiIpKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTg0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkFwXHhGM3MgZXNzYXMgdmVyaWZpY2FceEU3XHhGNWVzIGUgdHVkbyBlc3RhbmRvIGNvcnJldG8gYmFzdGEgZ2VyYXIgYSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTg0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlB1bGwgUmVxdWVzdCIpLCAiLiIpLCBtZHgoImEiLCB7CiAgICBpZDogImNvbXBvbmVudGUiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTg1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIjIyMgQ29tcG9uZW50ZSIsIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE4NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJFc3NlIHRleHRvIGRldmUgc2VyIHN1YnN0aXR1XHhFRGRvIHBlbG8gbm9tZSBkbyBjb21wb25lbnRlIGRpcmV0YW1lbnRlIGFmZXRhZG8gcGVsYSBhbHRlcmFceEU3XHhFM28gZ2VyYWRhIG5hICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxODcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUHVsbCBSZXF1ZXN0IiksICIuXG5FeGVtcGxvczoiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxODkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE4OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAidGZzLW1vZGFsXG4iKSksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTkxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxOTEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgInRmcy1idXR0b25cbiIpKSwgbWR4KCJhIiwgewogICAgaWQ6ICJpc3N1ZS1udW1iZXIiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTkzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIjIyMgTlx4RkFtZXJvIGRhIElTU1VFIiwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTk1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkVzc2UgdGV4dG8gZGV2ZSBzZXIgc3Vic3RpdHVceEVEZG8gcGVsbyBuXHhGQW1lcm8gZGEgSVNTVUUgZ2VyYWRhIG5vIEppcmEgb3Ugbm8gR2l0SHViLlxuRXhlbXBsb3M6IiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTk3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxOTcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIkRUSEZVSS01NzdcbiIpKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxOTkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE5OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiIzMzNFxuIikpLCBtZHgoImEiLCB7CiAgICBpZDogInByLWNoZWNrbGlzdCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyBQUiBDaGVja2xpc3QiLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMDMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRGV2ZS1zZSBhZGljaW9uYXIgdW0gIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjAzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIngiKSwgIiBkZW50cm8gZG9zIGNvbGNoZXRlcyBzZW0gZGVpeGFyIGVzcGFceEU3byBlbSBjYWRhIHVtIGRvcyBpdGVucyBxdWUgZm9yZW0gYWx0ZXJhZG9zIG5hICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMDMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUHVsbCBSZXF1ZXN0IiksICIuXG5FeGVtcGxvOiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIwNQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7fSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjA1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICItIFt4XSBDXHhGM2RpZ29cbi0gW3hdIFRlc3RlcyB1bml0XHhFMXJpb3Ncbi0gWyBdIERvY3VtZW50YVx4RTdceEUzb1xuLSBbeF0gU2FtcGxlc1xuIikpLCBtZHgoImEiLCB7CiAgICBpZDogImN1cnJlbnQtYmVoYXZpb3IiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjEwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIjIyMgUXVhbCBvIGNvbXBvcnRhbWVudG8gYXR1YWw/IiwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjEyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkRldmUtc2UgZGVzY3JldmVyIG8gYXR1YWwgY29tcG9ydGFtZW50byBlIG8gbW90aXZvIHF1ZSBsZXZvdSBhIGdlcmFyIGEgYWx0ZXJhXHhFN1x4RTNvLiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRXhlbXBsbzoiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMTQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIxNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiTyB0ZnMtbW9kYWwgblx4RTNvIGVzdFx4RTEgcGVybWl0aW5kbyBkZWZpbmlyIHVtYSBsYXJndXJhIG1haW9yIHF1ZSA3NjhweC4gRXN0XHhFMSBnZXJhbmRvIHByb2JsZW1hIHBvaXMgYW8gY3JpYXIgdW0gZm9ybXVsXHhFMXJpbyBtYWlvciBnZXJhLXNlIHVtIHNjcm9sbCBkaWZpY3VsdGFuZG8gYSB2aXN1YWxpemFceEU3XHhFM28gZG8gY2xpZW50ZS5cbiIpKSwgbWR4KCJhIiwgewogICAgaWQ6ICJuZXctYmVoYXZpb3IiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjE2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIjIyMgUXVhbCBvIG5vdm8gY29tcG9ydGFtZW50bz8iLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMTgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRGV2ZS1zZSBkZXNjcmV2ZXIgbyBub3ZvIGNvbXBvcnRhbWVudG8gZ2VyYWRvLCBiZW0gY29tbyBvIHF1ZSBlIGNvbW8gZm9pIGFsdGVyYWRvIHBhcmEgc29sdWNpb25hciBvIG1vdGl2byBxdWUgZm9pIGRlc2NyaXRvIG5vIGNvbXBvcnRhbWVudG8gYXR1YWwuIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIxOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJFeGVtcGxvOiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIyMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7fSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjIwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJDcmlhXHhFN1x4RTNvIGRvIG5vdm8gdmFsb3IgXCJmdWxsXCIgbmEgcHJvcHJpZWRhZGUgcC1zaXplLlxuRXN0ZSB2YWxvciBzZXJ2ZSBwYXJhIHBvZGVyIGRlaXhhciBvIHRmcy1tb2RhbCB0ZXIgbyB0YW1hbmhvIGNvbmZvcm1lIG8gY29udGVceEZBZG8gc2VtIGEgbGltaXRhXHhFN1x4RTNvIGRlIHRhbWFuaG8uXG4iKSksIG1keCgiYSIsIHsKICAgIGlkOiAic2ltdWxhdGlvbiIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMjMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIiMjIyBTaW11bGFceEU3XHhFM28iLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMjUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQXF1aSBkZXZlLXNlIGRlc2NyZXZlciBzdWdlc3RceEY1ZXMgZGUgZm9ybWFzIGRlIHZhbGlkYXIgYSBhbHRlcmFceEU3XHhFM28gZ2VyYWRhLiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMjYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRXhlbXBsbzoiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwge30sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIyNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiRXN0YSBjb3JyZVx4RTdceEUzbyBwb2RlIHNlciB2YWxpZGFkYSB1dGlsaXphbmRvIG8gc2FtcGxlIGxhYnMgbm8gcG9ydGFsXG4iKSksIG1keCgiYmxvY2txdW90ZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIyOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgicCIsIHsKICAgIHBhcmVudE5hbWU6ICJibG9ja3F1b3RlIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIzMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJBbFx4RTltIGRlc3NlcyByZXF1aXNpdG9zIHBvZGVtIHNlciBhZGljaW9uYWRvcyB0XHhGM3BpY29zIHBhcmEgZmFjaWxpdGFyIG8gZW50ZW5kaW1lbnRvIGRhICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMzAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUHVsbCBSZXF1ZXN0IiksICIuIEV4ZW1wbG86IE9ic2VydmFceEU3XHhGNWVzLCBkZWZpbmlceEU3XHhGNWVzLCBsaW5rcy4uLiIpKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjMyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkFwXHhGM3MgZ2VyYXIgYSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjMyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlB1bGwgUmVxdWVzdCIpLCAiIFx4RTkgc1x4RjMgYWd1YXJkYXIgYXByb3ZhXHhFN1x4RTNvLlxuRmFceEU3YSB1bSAiLCBtZHgoImVtIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjMzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInJlYmFzZSIpLCAiIGUgZW0gc2VndWlkYSBmYVx4RTdhIHVtICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMzMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAicHVzaCIpLCAiIGNvbSBhcyBhbHRlcmFceEU3XHhGNWVzIGUgYWd1YXJkZSBhIGFwcm92YVx4RTdceEUzby5cbkNhc28gc2VqYSBhcHJvdmFkbywgcGFyYWJceEU5bnMsIHN1YSBhbHRlcmFceEU3XHhFM28galx4RTEgZXN0YXJceEUxIG5hICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMzQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiYnJhbmNoIG1hc3RlciIpLCAiIGRvIHByb2pldG8uIikpOwp9CgppZiAodHlwZW9mIE1EWENvbnRlbnQgIT09ICd1bmRlZmluZWQnICYmIE1EWENvbnRlbnQgJiYgTURYQ29udGVudCA9PT0gT2JqZWN0KE1EWENvbnRlbnQpICYmIE9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIk1EWENvbnRlbnQiLAogICAgICBmaWxlbmFtZTogInNyYy9kb2NzL2RvY3VtZW50YXRpb24vZG9jdW1lbnQtc2V0dGluZ3MubWR4IgogICAgfQogIH0pOwp9Cgo7Ck1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOwo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKG1ha2VTaG9ydGNvZGUsICJtYWtlU2hvcnRjb2RlIiwgIi9Vc2Vycy93YXNoaW5ndG9uLnNpbHZhL3RvdHZzL3Byb2pldG9zLXBzbC90ZnMtcG9ydGFsL3NyYy9kb2NzL2RvY3VtZW50YXRpb24vZG9jdW1lbnQtc2V0dGluZ3MubWR4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIobGF5b3V0UHJvcHMsICJsYXlvdXRQcm9wcyIsICIvVXNlcnMvd2FzaGluZ3Rvbi5zaWx2YS90b3R2cy9wcm9qZXRvcy1wc2wvdGZzLXBvcnRhbC9zcmMvZG9jcy9kb2N1bWVudGF0aW9uL2RvY3VtZW50LXNldHRpbmdzLm1keCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKE1EWExheW91dCwgIk1EWExheW91dCIsICIvVXNlcnMvd2FzaGluZ3Rvbi5zaWx2YS90b3R2cy9wcm9qZXRvcy1wc2wvdGZzLXBvcnRhbC9zcmMvZG9jcy9kb2N1bWVudGF0aW9uL2RvY3VtZW50LXNldHRpbmdzLm1keCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKE1EWENvbnRlbnQsICJNRFhDb250ZW50IiwgIi9Vc2Vycy93YXNoaW5ndG9uLnNpbHZhL3RvdHZzL3Byb2pldG9zLXBzbC90ZnMtcG9ydGFsL3NyYy9kb2NzL2RvY3VtZW50YXRpb24vZG9jdW1lbnQtc2V0dGluZ3MubWR4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/washington.silva/totvs/projetos-psl/tfs-portal/src/docs/documentation/document-settings.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"documentação\"\n    }}>{`Documentação`}</h1>\n    <a id=\"introduction\"></a>\n## Introdução\n    <p>{`Este guia tem por objetivo definir as regras para criação de `}<em parentName=\"p\">{`Branchs`}</em>{`, `}<em parentName=\"p\">{`Pull Requests`}</em>{` e `}<em parentName=\"p\">{`Commits`}</em>{` no projetos TFS.\nPara seguir o guia é fundamental o conhecimento da `}<a parentName=\"p\" {...{\n        \"href\": \"https://git-scm.com/book/en/v2\"\n      }}>{`ferramenta Git`}</a>{`.`}</p>\n    <a id=\"flow\"></a>\n## Fluxos\n    <a id=\"branchs\"></a>\n## Regras para criação da *Branch*\n    <p>{`Antes de criar uma nova `}<em parentName=\"p\">{`branch`}</em>{` deve-se assegurar de estar na `}<em parentName=\"p\">{`branch master`}</em>{` do projeto.\nCaso já esteja na `}<em parentName=\"p\">{`master`}</em>{` rode o comando:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git pull\n`}</code></pre>\n    <p>{`Se não retornar nenhum erro ela estará atualizada e é hora de criar a `}<em parentName=\"p\">{`branch`}</em>{` no projeto. Para isso rode o comando:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git checkout -b <COMPONENTE>/<ISSUE>\n`}</code></pre>\n    <p>{`Onde o `}<inlineCode parentName=\"p\">{`<COMPONENTE>`}</inlineCode>{` deve conter o nome do componente e não o projeto onde ele se encontra. E a `}<inlineCode parentName=\"p\">{`<ISSUE>`}</inlineCode>{` é o número da ocorrência a qual se refere a alteração.\nExemplos:`}</p>\n    <p>{`Caso a ISSUE seja gerada no Jira:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git checkout -b tfs-button/TFS-222\n`}</code></pre>\n    <p>{`Caso a ISSUE seja gerada no GitHub:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git checkout -b tfs-button/235\n`}</code></pre>\n    <a id=\"commits\"></a>\n## Regras para criação de *Commits*\n    <p>{`A descrição dos `}<em parentName=\"p\">{`commits`}</em>{` podem ser feitos em português ou inglês.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Caso durante o desenvolvimento da melhoria ou correção forem gerados vários `}<em parentName=\"p\">{`commits`}</em>{` deve-se utilizar o comando `}<em parentName=\"p\">{`rebase`}</em>{` do git com a opção de `}<em parentName=\"p\">{`squash`}</em>{` para que o mesmo transforme em apenas um `}<em parentName=\"p\">{`commit`}</em>{` antes de gerar a `}<em parentName=\"p\">{`Pull Request`}</em>{`. Segue documentação: `}<a parentName=\"p\" {...{\n          \"href\": \"https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History\"\n        }}>{`Git rebase`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`Deve-se seguir um padrão para criação dos `}<em parentName=\"p\">{`commits`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<TIPO>(ESCOPO): <DESCRIÇÃO CURTA>\n<LINHA EM BRANCO>\n<CORPO>\n<LINHA EM BRANCO>\n<RODAPÉ>\n`}</code></pre>\n    <p>{`Agora vamos detalhar melhor o que deve ser descrito em cada parte:`}</p>\n    <a id=\"type\"></a>\n### Tipo\n    <p>{`Deve ser utilizado um dos tipos descritos abaixo conforme o objetivo da alteração:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`build (quando a alteração está relacionada ao `}<em parentName=\"li\">{`build`}</em>{`);`}</li>\n      <li parentName=\"ul\">{`docs (quando a alteração for na documentação);`}</li>\n      <li parentName=\"ul\">{`feat (quando for uma melhoria, for criada uma nova funcionalidade ou um novo componente);`}</li>\n      <li parentName=\"ul\">{`fix (para correção de `}<em parentName=\"li\">{`bugs`}</em>{`);`}</li>\n      <li parentName=\"ul\">{`perf (quando o item é gerado para melhoria de performance);`}</li>\n      <li parentName=\"ul\">{`refactor (quando for feito uma refatoração ou aplicação de boas práticas);`}</li>\n      <li parentName=\"ul\">{`test (quando forem adicionados ou refatorados os testes);`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Nunca colocar espaço entre a descrição do tipo e a abertura de parênteses do escopo.`}</p>\n    </blockquote>\n    <a id=\"scope\"></a>\n### Escopo\n    <p>{`No escopo deverá ser definido o nome do componente ou serviço diretamente afetado pelo `}<em parentName=\"p\">{`commit`}</em>{`, caso mais de um componente seja afetado, deve-se definir o principal. Não deve ser utilizado o prefixo na nomenclatura, por exemplo:`}</p>\n    <p>{`Corretos:\n(button): , (event-sourcing): , (avatar): , ...`}</p>\n    <p>{`Errados:\n(tfs-button): , (tfs-event-sourcing): , (tfs-avatar): , ...`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Sempre deve estar entre parênteses e após o fechamento do parênteses deve-se colocar dois pontos e um espaço.`}</p>\n    </blockquote>\n    <a id=\"short-description\"></a>\n### Descrição curta\n    <ul>\n      <li parentName=\"ul\">{`Deve-se colocar uma breve descrição do que foi feito no `}<em parentName=\"li\">{`commit`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`Nunca iniciar a descrição com letra maiúscula.`}</li>\n      <li parentName=\"ul\">{`Nunca deve utilizar ponto final na descrição.`}</li>\n      <li parentName=\"ul\">{`Deve-se utilizar o modo imperativo na descrição.`}</li>\n      <li parentName=\"ul\">{`Não deve-se ultrapassar 72 caracteres na soma dos caracteres do tipo, escopo e descrição curta.`}</li>\n    </ul>\n    <p>{`por exemplo:`}</p>\n    <p>{`Corretas:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`adiciona nova funcionalidade\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`remove variável não mais utilizada\n`}</code></pre>\n    <p>{`Erradas:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Adicionada nova funcionalidade.\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`Removida variável não mais utilizada no componente tfs-button devido a quebra no uso do mesmo.\n`}</code></pre>\n    <a id=\"body\"></a>\n### Corpo\n    <ul>\n      <li parentName=\"ul\">{`Deve-se utilizar o modo imperativo na descrição.`}</li>\n      <li parentName=\"ul\">{`Deve-se quebrar linha a cada 72 caracteres para que a mesma não seja cortada no GitHub.`}</li>\n      <li parentName=\"ul\">{`Deve descrever a motivação que levou a mudança e também o que foi alterado em relação ao comportamento anterior.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Antes da declaração do corpo deve-se deixar uma linha em branco.`}</p>\n    </blockquote>\n    <a id=\"footer\"></a>\n### Rodapé\n    <p>{`No rodapé deve-se colocar a palavra `}<inlineCode parentName=\"p\">{`Fixes`}</inlineCode>{` e em seguida o número da ISSUE atendida. Exemplos:`}</p>\n    <p>{`Caso a ISSUE seja gerada no Jira:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Fixes DTFSUI-222\n`}</code></pre>\n    <p>{`Caso a ISSUE seja gerada no GitHub e no Jira:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Fixes #235, DTFSUI-222\n`}</code></pre>\n    <p>{`Caso a ISSUE seja gerada no GitHub:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Fixes #235, #456, #665\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Antes da declaração do rodapé deve-se deixar uma linha em branco.`}</p>\n    </blockquote>\n    <a id=\"breaking-changes\"></a>\n### *Breaking Changes*\n    <ul>\n      <li parentName=\"ul\">{`As `}<em parentName=\"li\">{`breaking changes`}</em>{` devem ser declaradas no rodapé uma linha após a declaração do `}<em parentName=\"li\">{`Fixes`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`Deve iniciar utilizando \"BREAKING CHANGES: \" e após o espaço colocar uma breve descrição da quebra iniciando sempre com caractere minúsculo e não colocar ponto final.`}</li>\n      <li parentName=\"ul\">{`Deve-se pular uma linha após a breve descrição e iniciar a descrição do que deve ser migrado ou alterado.`}</li>\n      <li parentName=\"ul\">{`Deve-se quebrar linha a cada 72 caracteres para que a mesma não seja cortada no GitHub.`}</li>\n      <li parentName=\"ul\">{`O tipo do item de `}<em parentName=\"li\">{`breaking change`}</em>{` depende do que está sendo implementado, por exemplo, caso for apenas removida alguma propriedade o tipo deve ser definido como `}<em parentName=\"li\">{`refactor`}</em>{`, caso ao corrigir um problema seja gerado um `}<em parentName=\"li\">{`breaking change`}</em>{` então o tipo deve ser definido como `}<em parentName=\"li\">{`fix`}</em>{`.`}</li>\n    </ul>\n    <a id=\"commit-example\"></a>\n### Exemplos de descrições de *commits* completos\n    <p>{`Sem `}<em parentName=\"p\">{`Breaking Changes`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`feat(button): adiciona a propriedade p-size\n\nO componente tfs-button apenas aceita o uso das classes de grid \npara definir sua largura, não permitindo assim fazer um ajuste \nfino.\nAdiciona a propriedade size para que o componente possa receber um valor\nem pixels fixo para sua largura.\n\nFixes DTHFUI-221\n`}</code></pre>\n    <p>{`Com `}<em parentName=\"p\">{`Breaking Changes`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`refactor(button): remove a propriedade p-size\n\nFoi removida a propriedade p-size do componente.\n\nFixes DTHFUI-225\n\nBREAKING CHANGES: removida propriedade p-size\n\nFoi removida a propriedade p-size do tfs-button pois o mesmo deve ser\ndefinido através do uso das classes de grid.\n\nAntes: \n<tfs-button p-size=\"md\"></tfs-button>\n\nDepois:\n<tfs-button class=\"tfs-md-4\"></tfs-button>\n`}</code></pre>\n    <a id=\"pull-requests\"></a>\n## Regras para criação de *Pull Requests*\n    <p>{`Antes de criar a `}<em parentName=\"p\">{`Pull Request`}</em>{` é importante verificar se algumas perguntas foram respondidas:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<em parentName=\"li\">{`Pull Request`}</em>{` resolveu o problema solicitado na ISSUE?`}</li>\n      <li parentName=\"ul\">{`Foi gerado apenas um `}<em parentName=\"li\">{`commit`}</em>{` para solução do problema? Caso tenha mais de um `}<em parentName=\"li\">{`commit`}</em>{` ou o padrão não esteja de acordo deve seguir este `}<a parentName=\"li\" {...{\n          \"href\": \"#commits\"\n        }}>{`Guia de `}<em parentName=\"a\">{`commits`}</em></a>{`.`}</li>\n    </ul>\n    <p>{`Após essas verificações e tudo estando correto basta gerar a `}<em parentName=\"p\">{`Pull Request`}</em>{`.`}</p>\n    <a id=\"componente\"></a>\n### Componente\n    <p>{`Esse texto deve ser substituído pelo nome do componente diretamente afetado pela alteração gerada na `}<em parentName=\"p\">{`Pull Request`}</em>{`.\nExemplos:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`tfs-modal\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`tfs-button\n`}</code></pre>\n    <a id=\"issue-number\"></a>\n### Número da ISSUE\n    <p>{`Esse texto deve ser substituído pelo número da ISSUE gerada no Jira ou no GitHub.\nExemplos:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`DTHFUI-577\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`#334\n`}</code></pre>\n    <a id=\"pr-checklist\"></a>\n### PR Checklist\n    <p>{`Deve-se adicionar um `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` dentro dos colchetes sem deixar espaço em cada um dos itens que forem alterados na `}<em parentName=\"p\">{`Pull Request`}</em>{`.\nExemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`- [x] Código\n- [x] Testes unitários\n- [ ] Documentação\n- [x] Samples\n`}</code></pre>\n    <a id=\"current-behavior\"></a>\n### Qual o comportamento atual?\n    <p>{`Deve-se descrever o atual comportamento e o motivo que levou a gerar a alteração.`}</p>\n    <p>{`Exemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`O tfs-modal não está permitindo definir uma largura maior que 768px. Está gerando problema pois ao criar um formulário maior gera-se um scroll dificultando a visualização do cliente.\n`}</code></pre>\n    <a id=\"new-behavior\"></a>\n### Qual o novo comportamento?\n    <p>{`Deve-se descrever o novo comportamento gerado, bem como o que e como foi alterado para solucionar o motivo que foi descrito no comportamento atual.`}</p>\n    <p>{`Exemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Criação do novo valor \"full\" na propriedade p-size.\nEste valor serve para poder deixar o tfs-modal ter o tamanho conforme o conteúdo sem a limitação de tamanho.\n`}</code></pre>\n    <a id=\"simulation\"></a>\n### Simulação\n    <p>{`Aqui deve-se descrever sugestões de formas de validar a alteração gerada.`}</p>\n    <p>{`Exemplo:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Esta correção pode ser validada utilizando o sample labs no portal\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Além desses requisitos podem ser adicionados tópicos para facilitar o entendimento da `}<em parentName=\"p\">{`Pull Request`}</em>{`. Exemplo: Observações, definições, links...`}</p>\n    </blockquote>\n    <p>{`Após gerar a `}<em parentName=\"p\">{`Pull Request`}</em>{` é só aguardar aprovação.\nFaça um `}<em parentName=\"p\">{`rebase`}</em>{` e em seguida faça um `}<em parentName=\"p\">{`push`}</em>{` com as alterações e aguarde a aprovação.\nCaso seja aprovado, parabéns, sua alteração já estará na `}<em parentName=\"p\">{`branch master`}</em>{` do projeto.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}